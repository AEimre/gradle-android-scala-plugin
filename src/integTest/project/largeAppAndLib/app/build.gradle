apply plugin: "com.android.application"
apply plugin: "jp.leafytree.android-scala"

android {
    compileSdkVersion androidPluginCompileSdkVersion
    buildToolsVersion androidPluginBuildToolsVersion

    defaultConfig {
        minSdkVersion Integer.decode(androidPluginMinSdkVersion)
        targetSdkVersion Integer.decode(androidPluginTargetSdkVersion)
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"
        versionCode 1
        versionName "1.0"
    }

    productFlavors {
        flavor1 {}
        flavor2 {}
    }

    packagingOptions {
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
    }

    buildTypes {
        debug {}
        debug2 {}
    }

    dexOptions {
        incremental androidPluginIncremental.toBoolean()
        preDexLibraries androidPluginPreDexLibraries.toBoolean()
        jumboMode androidPluginJumboMode.toBoolean()
    }
}

dependencies {
    compile "com.google.android:multidex:0.1"
    flavor1Compile "org.scala-lang:scala-library:$scalaLibraryVersion"
    flavor2Compile "org.scala-lang:scala-library:$scalaLibraryVersion"
    compile project(":lib")

    // to break 65535 method limitation
    androidTestCompile "org.apache.commons:commons-lang3:3.3.2"
    androidTestCompile "org.apache.commons:commons-math3:3.2"
    androidTestCompile "org.apache.commons:commons-io:1.3.2"
    androidTestCompile "com.google.guava:guava:16.0.1"
    androidTestCompile "com.google.code.findbugs:jsr305:2.0.3"
}

afterEvaluate {
    tasks.matching {
        it.name.startsWith('dex')
    }.each { dx ->
        if (dx.additionalParameters == null) {
            dx.additionalParameters = []
        }
        dx.additionalParameters += '--multi-dex'
        dx.additionalParameters += "--main-dex-list=$rootDir/main-dex-list.txt".toString()
    }
}
